<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  Generated on <$_SCRIBE_DATE$>
//
//  paintStroke.frag
//  fragment shader
//
//  Created by Andrzej Kapolka on 9/15/14.
//  Copyright 2014 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@include DeferredBufferWrite.slh@>

// the interpolated normal
varying vec4 interpolatedNormal;
varying vec4 modelPosition;
vec3 newNormal = normalize(interpolatedNormal.xyz);

float rand(vec2 point){
    return fract(sin(dot(point.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void main(void) {
    int frontCondition = 1 -int(gl_FrontFacing) * 2;
    vec3 color = gl_Color.rgb;
    
    packDeferredFragment(
        newNormal * frontCondition,
        glowIntensity,
        color,
        gl_FrontMaterial.specular.rgb,
        gl_FrontMaterial.shininess);
}
