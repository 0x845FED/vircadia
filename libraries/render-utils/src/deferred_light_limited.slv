<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  Generated on <$_SCRIBE_DATE$>
//
//  deferred_light_limited.vert
//  vertex shader
//
//  Created by Sam Gateau on 6/16/16.
//  Copyright 2014 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@include gpu/Transform.slh@>

<@include gpu/Inputs.slh@>

<$declareStandardTransform()$>

<@include model/Light.slh@>


out vec4 _texCoord0;

void main(void) {
    vec4 sphereVertex = inPosition;
    vec4 sphereParam = getLightVolumeGeometry(getLight());

    sphereVertex.xyz *= sphereParam.w;

    // standard transform
    TransformCamera cam = getTransformCamera();
    TransformObject obj = getTransformObject();
    <$transformModelToClipPos(cam, obj, sphereVertex, gl_Position)$>;

    vec4 projected = gl_Position / gl_Position.w;
    projected.xy = (projected.xy + 1.0) * 0.5;

    if (cam_isStereo()) {
        projected.x = 0.5 * (projected.x + cam_getStereoSide());
    }
    _texCoord0 = vec4(projected.xy, 0.0, 1.0) * gl_Position.w;
}
