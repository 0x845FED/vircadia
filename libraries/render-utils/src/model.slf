<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  Generated on <$_SCRIBE_DATE$>
//  model.frag
//  fragment shader
//
//  Created by Andrzej Kapolka on 10/14/13.
//  Copyright 2013 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@include DeferredBufferWrite.slh@>

<@include model/Material.slh@>

// the diffuse texture
uniform sampler2D albedoMap;

in vec4 _position;
in vec3 _normal;
in vec3 _color;
in vec2 _texCoord0;


void main(void) {
    // Fetch albedo map
    vec4 albedo = texture(albedoMap, _texCoord0);

    Material mat = getMaterial();

    packDeferredFragment(
        normalize(_normal.xyz), 
        evalOpaqueFinalAlpha(getMaterialOpacity(mat), albedo.a),
        getMaterialAlbedo(mat) * albedo.rgb * _color,
        getMaterialFresnel(mat),
        getMaterialShininess(mat));
}
