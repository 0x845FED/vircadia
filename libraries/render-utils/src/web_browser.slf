<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  <$_SCRIBE_FILENAME$>
//  Generated on <$_SCRIBE_DATE$>
//
//  Created by Anthony Thibault on 7/25/16.
//  Copyright 2016 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@include gpu/Color.slh@>
<@include render-utils/ShaderConstants.h@>

<@if not HIFI_USE_FORWARD@>
    <@include DeferredBufferWrite.slh@>
<@else@>
    layout(location=0) out vec4 _fragColor0;
<@endif@>

LAYOUT(binding=0) uniform sampler2D webTexture;

layout(location=RENDER_UTILS_ATTR_NORMAL_WS) in vec3 _normalWS;
layout(location=RENDER_UTILS_ATTR_COLOR) in vec4 _color;
layout(location=RENDER_UTILS_ATTR_TEXCOORD01) in vec4 _texCoord01;
#define _texCoord0 _texCoord01.xy
#define _texCoord1 _texCoord01.zw

void main(void) {
    vec4 texel = texture(webTexture, _texCoord0);
    texel = color_sRGBAToLinear(texel);
    texel *= _color;

<@if not HIFI_USE_FORWARD@>
    <@if not HIFI_USE_TRANSLUCENT@>
        packDeferredFragmentUnlit(normalize(_normalWS), 1.0, texel.rgb);
    <@else@>
        packDeferredFragmentTranslucent(normalize(_normalWS), texel.a, texel.rgb, DEFAULT_ROUGHNESS);
    <@endif@>
<@else@>
    _fragColor0 = texel;
<@endif@>
}
