<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  Generated on <$_SCRIBE_DATE$>
//
//  taa.frag
//  fragment shader
//
//  Created by Sam Gateau on 8/14/2017
//  Copyright 2017 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//


<@include taa.slh@>

in vec2 varTexCoord0;
layout(location = 0) out vec4 outFragColor;

void main() {

    vec2 fragUV = find_closest_fragment_3x3(varTexCoord0);
    vec3 sourceColor = texture(sourceMap, fragUV).xyz;

    vec2 pixVelocity = texture(velocityMap, fragUV).xy;
    vec2 velocity = params.motionScale * pixVelocity;// *getInvWidthHeight();
    vec2 prevTexCoord = varTexCoord0 - velocity;
    
    vec3 historyColor = sourceColor;

    if (!(any(lessThan(prevTexCoord, vec2(0.0))) || any(greaterThan(prevTexCoord, vec2(1.0))))) {
        historyColor = texture(historyMap, prevTexCoord).xyz;
    }

    vec3 nextColor = mix(historyColor, sourceColor, params.blend);

    outFragColor = vec4(nextColor, 1.0);
}
