<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  Generated on <$_SCRIBE_DATE$>
//
//  taa.frag
//  fragment shader
//
//  Created by Sam Gateau on 8/14/2017
//  Copyright 2017 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//


<@include taa.slh@>

in vec2 varTexCoord0;
layout(location = 0) out vec4 outFragColor;

void main() {

    vec3 fragUV = taa_findClosestFragment3x3(varTexCoord0);
   // vec3 fragUV = vec3(varTexCoord0, taa_fetchDepth(varTexCoord0));
    vec2 fragVel = taa_fetchVelocityMap(fragUV.xy);
    vec3 sourceColor;
    vec3 historyColor;
    //vec3 nextColor = taa_temporalReprojection(fragUV.xy, fragVel, fragUV.z);
    vec2 prevFragUV = taa_fetchSourceAndHistory(fragUV.xy, fragVel, sourceColor, historyColor);
  /*  vec3 sourceColor = taa_fetchSourceMap(fragUV.xy).xyz;
    vec2 prevFragUV = fragUV.xy - fragVel;
    vec3 historyColor = sourceColor;
    if (!(any(lessThan(prevFragUV, vec2(0.0))) || any(greaterThan(prevFragUV, vec2(1.0))))) {
        historyColor = taa_fetchHistoryMap(prevFragUV).xyz;
    }*/

    vec3 nextColor = mix(historyColor, sourceColor, params.blend);


    outFragColor = vec4(nextColor, 1.0);
}
