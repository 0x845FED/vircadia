<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  Generated on <$_SCRIBE_DATE$>
//
//  simple.frag
//  fragment shader
//
//  Created by Cl√©ment Brisset on 5/29/15.
//  Copyright 2014 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@include DeferredBufferWrite.slh@>

// the diffuse texture
uniform sampler2D originalTexture;

// the interpolated normal
varying vec4 interpolatedNormal;

// the glow intensity
//uniform float glowIntensity;

void main(void) {
    /*   // set the diffuse, normal, specular data
     gl_FragData[0] = vec4(gl_Color.rgb, glowIntensity);
     gl_FragData[1] = normalize(normal) * 0.5 + vec4(0.5, 0.5, 0.5, 1.0);
     gl_FragData[2] = vec4(gl_FrontMaterial.specular.rgb, gl_FrontMaterial.shininess / 128.0);
     */
    
    vec4 texel = texture2D(originalTexture, gl_TexCoord[0].st);
    
    packDeferredFragment(
         normalize(interpolatedNormal.xyz),
         glowIntensity * texel.a,
         gl_Color.rgb * texel.rgb,
         gl_FrontMaterial.specular.rgb,
         gl_FrontMaterial.shininess);
}