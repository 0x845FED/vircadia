<!
//  Material.slh
//  fragment shader
//
//  Created by Sam Gateau on 12/16/14.
//  Copyright 2013 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
!>
<@if not MODEL_MATERIAL_SLH@>
<@def MODEL_MATERIAL_SLH@>

struct Material { 
    vec4 _emissiveOpacity;
    vec4 _albedoRoughness;
    vec4 _fresnelMetallic;
    vec4 _spare;
};

uniform materialBuffer {
    Material _mat;
};

Material getMaterial() {
    return _mat;
}

vec3 getMaterialEmissive(Material m) { return m._emissiveOpacity.rgb; }
float getMaterialOpacity(Material m) { return m._emissiveOpacity.a; }

vec3 getMaterialAlbedo(Material m) { return m._albedoRoughness.rgb; }
float getMaterialRoughness(Material m) { return m._albedoRoughness.a; }

vec3 getMaterialFresnel(Material m) { return m._fresnelMetallic.rgb; }
float getMaterialMetallic(Material m) { return m._fresnelMetallic.a; }

float getMaterialShininess(Material m) { return 1.0 - getMaterialRoughness(m); }

<@endif@>
