<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  Generated on <$_SCRIBE_DATE$>
//  skybox.vert
//  vertex shader
//
//  Created by Sam Gateau on 5/5/2015.
//  Copyright 2015 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@include gpu/Transform.slh@>

<$declareStandardTransform()$>

struct Skybox {
    vec4 _color;
};

<@if GPU_FEATURE_PROFILE == GPU_CORE @>
uniform skyboxBuffer {
    Skybox _skybox;
};
Skybox getSkybox() {
    return _skybox;
}
<@else@>
uniform vec4 skyboxBuffer[1];
Skybox getSkybox() {
    Skybox _skybox;
    _skybox._color = skyboxBuffer[0];
    return _skybox;
}
<@endif@>

varying vec3 normal;
varying vec2 texcoord;
varying vec3 color;

void main(void) {
    texcoord = gl_Vertex.xy;

    Skybox skybox = getSkybox();
    color = skybox._color.xyz;

    // standard transform
    TransformCamera cam = getTransformCamera();
    vec3 clipDir = vec3(texcoord.xy, 0.0);
    vec3 eyeDir;
    
    <$transformClipToEyeDir(cam, clipDir, eyeDir)$>;
    <$transformEyeToWorldDir(cam, eyeDir, normal)$>;

    // Position is supposed to cmoe in clip space
    gl_Position = vec4(texcoord.xy, 0.0, 1.0);
}
